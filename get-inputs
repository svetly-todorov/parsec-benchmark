#!/usr/bin/env bash
set -eux
sim=true
verbose=''
native=false
while getopts nSv OPT; do
  case "$OPT" in
    S)
      sim=false
      ;;
    n)
      native=true
      ;;
    v)
      verbose=-v
      ;;
  esac
done
shift "$(($OPTIND - 1))"
download_dir="${1:-.}"
outdir="${2:-.}"
## Replace the github user with the one from git remote -v
if git remote -v | grep "git@"; then
  # origin is ssh
  git_origin_user=$(git remote -v | grep origin | grep fetch | awk '{print $2}' | sed 's/git@github.com://' | sed 's/\.git//')
  url_base=https://github.com/${git_origin_user}/releases/download/3.0
else
  # origin is https
  git_origin_user=$(git remote -v | grep origin | grep fetch | awk '{print $2}' | sed 's|https://github.com/||' | sed 's/\.git//' )
  url_base=https://github.com/${git_origin_user}/releases/download/3.0
fi
basenames=''
basenames="$basenames parsec-3.0-core.tar.gz"
if "$sim"; then
  basenames="$basenames parsec-3.0-input-sim.tar.gz"
fi
mkdir -p "$outdir"
for basename in $basenames; do
  if [ ! -f "${download_dir}/${basename}" ]; then
    wget -nc -P "$download_dir" $verbose "${url_base}/${basename}"
  fi
  tar -xz $verbose -f "${download_dir}/${basename}" -C "$outdir" --skip-old-files --strip-components=1
done
if "$native"; then
  basename="parsec-3.0-input-native.tar.gz"
  native_out="$download_dir/$basename"
  if [ ! -f "$native_out" ]; then
    # Huge. Impractical for simulators, intended for real silicon.
    rm -f "$native_out"
    i=0
    while [ "$i" -lt 5 ]; do
      wget -O- -nc -P "$download_dir" $verbose "${url_base}/${basename}.$i" >> "$native_out" 
      i="$((i + 1))"
    done
  fi
  tar -xz $verbose -f "$native_out" -C "$outdir" --skip-old-files --strip-components=1
fi
